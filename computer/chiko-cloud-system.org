#+TITLE: ChikoCloud

* Chiko Cloud System
琪可云的系统配置，使用 `guix system reconfigure 文件名.scm` 即可应用更改
#+begin_src scheme :tangle ../reconfigure/chiko_cloud/chiko_cloud_system.scm :noweb yes :noweb-prefix no
  (use-modules <<module>>)

  (operating-system
    <<env>>
    (bootloader <<bootloader>>)
    (initrd-modules (cons* <<initrd-module>> %base-initrd-modules))
    (privileged-programs (cons* <<privileged-program>> %default-privileged-programs))
    (users (cons* <<user>> %base-user-accounts))
    (services (cons* <<service>> %base-services))
    (mapped-devices (list <<mapped-device>>))
    (file-systems (cons* <<filesystem>> %base-file-systems))
    (packages (cons* <<package>> %base-packages)))
#+end_src

** 基础信息
本地化、时区、键盘布局、主机名
#+begin_src scheme :noweb-ref env
  (locale "zh_CN.utf8")
  (timezone "Asia/Singapore")
  (keyboard-layout (keyboard-layout "us"))
  (host-name "chikocloud")
#+end_src

** VPS支持
#+begin_src scheme :noweb-ref initrd-module
  "virtio_scsi"
#+end_src

** 用户配置
*** MinkieYume
#+begin_src scheme :noweb-ref user
  (user-account
    (name "minkieyume")
    (comment "Minkieyume")
    (group "users")
    (home-directory "/home/minkieyume")
    (supplementary-groups '("wheel" "netdev" "audio" "video")))
#+end_src

** 基础模块
#+begin_src scheme :noweb-ref module
  (gnu)
  (gnu system)
  (gnu packages admin)
  (gnu system privilege)
#+end_src

** 基础包
一些基础包
#+begin_src scheme :noweb-ref package
  htop
#+end_src

** Bootloader配置
#+begin_src scheme :noweb-ref bootloader
  (bootloader-configuration
    (bootloader grub-efi-bootloader)
    (targets (list "/boot/efi"))
    (keyboard-layout keyboard-layout))
#+end_src

** 驱动映射
#+begin_src scheme :noweb-ref mapped-device
  (mapped-device
    (source (uuid
              "31481dcb-adb6-4939-9e3e-00816e884e0c"))
    (target "cryptroot")
    (type luks-device-mapping))
#+end_src

** 文件系统
这是被“挂载”的文件系统列表。唯一的文件系统标识符（“UUID”）可以通过在终端运行 'blkid' 获得。
#+begin_src scheme :noweb-ref filesystem
  (file-system
    (mount-point "/boot/efi")
    (device (uuid "DD36-2C2F"
              'fat32))
    (type "vfat"))
  (file-system
    (mount-point "/")
    (device "/dev/mapper/cryptroot")
    (type "ext4")
    (dependencies mapped-devices))
#+end_src

* 基础服务
** 网络模块
#+begin_src scheme :noweb-ref module
  (gnu services networking)
#+end_src

配置网络服务：
#+begin_src scheme :noweb-ref service
  (service dhcpcd-service-type)
  (service ntp-service-type)
#+end_src

** OpenSSH
#+begin_src scheme :noweb-ref module
  (gnu services ssh)
#+end_src

#+begin_src scheme :noweb-ref package
  mosh
#+end_src

配置SSH配置的服务：
#+begin_src scheme :noweb-ref service
  (service openssh-service-type
    (openssh-configuration
      (openssh (spec->pkg "openssh-sans-x"))
      (password-authentication? #f)
      (permit-root-login #f)
      (authorized-keys
        `(("minkieyume"
            ,(local-file "../../files/keys/yumemi_rsa.pub"))))))
#+end_src

** Doas
Doas是比Sudo更简洁，也更为安全的提权工具。
之所以用Doas而不用Sudo，是因为Sudo通常会有一定的安全漏洞，结构也比较复杂，而Doas结构相对简单，攻击面也更少，适合不需要复杂提权配置的服务器或个人。
#+begin_src scheme :noweb-ref package
  opendoas
#+end_src

由于自定义的doas服务默认不会更改程序掩码，Doas需要手动设置系统程序掩码。
#+begin_src scheme :noweb-ref privileged-program
  (privileged-program
    (program (file-append opendoas "/bin/doas"))
    (setuid? #t))
#+end_src

引入自定义的包定义的doas服务。
#+begin_src scheme :noweb-ref module
  (chiko services doas)
#+end_src

#+begin_src scheme :noweb-ref service
  (service doas-service-type)
#+end_src

* Tools
** Emacs
基础的包配置
#+begin_src scheme :noweb-ref package
  emacs
#+end_src

模块配置
#+begin_src scheme :noweb-ref module
  (gnu packages emacs)
#+end_src

* Service
